<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.garbage.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.garbage.pojo.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="stage" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msg" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, password,sex, stage, msg, img, phone, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phoneNumber}
    and password = #{password}
  </select>
  <select id="selectNameCount" parameterType="string" resultType="int">
    select count(*)
    from user
    where name = #{userName}
  </select>
  <select id="selectNameById" parameterType="int" resultType="string">
    select name
    from user
    where id = #{id}
  </select>
  <select id="selectByPhone" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone}
  </select>
  <select id="selectPhoneCount" resultType="java.lang.Integer">
    select count(*) from user
    where phone = #{phone}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.garbage.pojo.User">
    insert into user (id, name,
      password, sex, stage, msg, img,
     phone, update_time,
      create_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, now(),
      now())
  </insert>

  <insert id="insertSelective" parameterType="com.garbage.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="phone != null">
        phone,
      </if>
      update_time,
      create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      now(),
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.garbage.pojo.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.garbage.pojo.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      sex = #{sex, jdbcType=VARCHAR},
      stage = #{stage, jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      update_time = now(),
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPhone">
    update user
    set password = #{password}
    where phone = #{phoneNumber}
  </update>
</mapper>